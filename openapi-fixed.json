{
  "openapi": "3.0.3",
  "info": {
    "title": "partner-api",
    "description": "Bellhop's Partner API",
    "version": "5",
    "contact": {
      "name": "Bellhop Engineering",
      "url": "http://www.bellhop.com/",
      "email": "engineering@bellhop.com"
    },
    "x-konfig-ignore": {
      "potential-incorrect-type": true
    }
  },
  "servers": [
    {
      "description": "Development",
      "url": "https://partners.bellhops.dev/v5"
    },
    {
      "description": "Production",
      "url": "https://partners.bellhop.com/v5"
    }
  ],
  "tags": [
    {
      "name": "QuoteServiceGroup"
    },
    {
      "name": "Lead"
    },
    {
      "name": "Quote"
    },
    {
      "name": "PostalCode"
    },
    {
      "name": "Location"
    },
    {
      "name": "Order"
    }
  ],
  "paths": {
    "/postal-codes/serviceability": {
      "get": {
        "tags": [
          "PostalCode"
        ],
        "summary": "Get Postal Codes Serviceability V5",
        "operationId": "PostalCode_serviceability",
        "security": [
          {
            "OAuth2ImplicitBearer": [
            ]
          }
        ],
        "parameters": [
          {
            "name": "origin_postal_code",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Origin Postal Code",
              "type": "string"
            }
          },
          {
            "name": "destination_postal_code",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Destination Postal Code",
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalCodesServiceabilityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/leads": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Create Lead",
        "operationId": "Lead_create",
        "security": [
          {
            "OAuth2ImplicitBearer": [
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLeadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "List Leads",
        "operationId": "Lead_list",
        "security": [
          {
            "OAuth2ImplicitBearer": [
            ]
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Email",
              "type": "string",
              "format": "email",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadsListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/leads/{lead_id}": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Get Lead",
        "operationId": "Lead_get",
        "security": [
          {
            "OAuth2ImplicitBearer": [
            ]
          }
        ],
        "parameters": [
          {
            "name": "lead_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Lead Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Lead"
        ],
        "summary": "Cancel Lead",
        "operationId": "Lead_delete",
        "security": [
          {
            "OAuth2ImplicitBearer": [
            ]
          }
        ],
        "parameters": [
          {
            "name": "lead_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Lead Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Lead"
        ],
        "summary": "Update Lead",
        "operationId": "Lead_update",
        "security": [
          {
            "OAuth2ImplicitBearer": [
            ]
          }
        ],
        "description": "Update attributes of a lead.\n\n:lead_id: The ID of the lead to update. This can be either the bellhop id or the external_id.",
        "parameters": [
          {
            "name": "lead_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Lead Id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{quote_id}": {
      "get": {
        "tags": [
          "Quote"
        ],
        "summary": "Get Quote",
        "operationId": "Quote_get",
        "security": [
          {
            "OAuth2ImplicitBearer": [
            ]
          }
        ],
        "description": "Fetch a quote by ID",
        "parameters": [
          {
            "description": "UUID of the quote",
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Quote Id",
              "description": "UUID of the quote",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quotes": {
      "post": {
        "tags": [
          "Quote"
        ],
        "summary": "Create Quote",
        "operationId": "Quote_create",
        "security": [
          {
            "OAuth2ImplicitBearer": [
              "create:quotes"
            ]
          }
        ],
        "description": "Creates a quote\n\nCreates a quote for a given customer using the provided locations and service code.\nThe LOCALFULLSERVICE service code will generate a service group with\nLOADINGUNLOADING and TRANSIT services.\nAll other service codes generate service groups with a single service.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuoteRequest"
              },
              "examples": {
                "default": {
                  "summary": "Create a quote",
                  "description": "Create a quote",
                  "value": {
                    "customer": {
                      "first_name": "John",
                      "last_name": "Doe",
                      "phone": "5555555555",
                      "email": "heythereitsjon@gooogle.com"
                    },
                    "start_datetime": "2024-01-01T12:00:00",
                    "service_code": "LOCALFULLSERVICE",
                    "locations": {
                      "1": {
                        "line_1": "123 Main St",
                        "city": "New York",
                        "state": "NY",
                        "postal_code": "10001",
                        "country": "US",
                        "property_type": "SINGLE_FAMILY_HOME"
                      },
                      "2": {
                        "line_1": "321 Secondary St",
                        "city": "New York",
                        "state": "NY",
                        "postal_code": "10001",
                        "country": "US",
                        "property_type": "SINGLE_FAMILY_HOME"
                      }
                    },
                    "inventory": {
                      "area": 1500,
                      "intent": "EVERYTHING",
                      "rooms": [
                        {
                          "slug": "primary-bedroom",
                          "count": 1
                        }
                      ],
                      "access_flags": {
                        "elevator": false,
                        "elevator_reserved": false,
                        "long_walk_to_truck": false,
                        "stair_flights": 1
                      },
                      "additional_items": [
                        {
                          "slug": "washing-machine",
                          "count": 1
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{quote_id}/service-groups": {
      "post": {
        "tags": [
          "QuoteServiceGroup"
        ],
        "summary": "Create Service Group",
        "operationId": "QuoteServiceGroup_create",
        "security": [
          {
            "OAuth2ImplicitBearer": [
              "create:quotes"
            ]
          }
        ],
        "description": "Creates a new service group\n\nA service group is a collection of services that are performed at the\nsame time and location.\nThe created service group will be created with the provided services,\nlocations, and start date time.\nThe workers, duration, and end date time will be estimated based on the\nlocations and inventory attached to the quote.",
        "parameters": [
          {
            "description": "UUID of the quote",
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Quote Id",
              "description": "UUID of the quote",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteServiceGroupsCreateRequest"
              },
              "examples": {
                "default": {
                  "summary": "Create a service group",
                  "description": "Create a service group",
                  "value": {
                    "service_codes": [
                      "LOADINGUNLOADING",
                      "TRANSIT"
                    ],
                    "locations": [
                      "a4cef656c2a04ca4aa6d19cee4eb9b7e",
                      "b4cef656c2a04ca4aa6d19cee4eb9b7e"
                    ],
                    "start_datetime": "2024-01-01T12:00:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGroupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/service_groups/{service_group_id}/locations": {
      "put": {
        "tags": [
          "QuoteServiceGroup"
        ],
        "summary": "Change Locations On Service Group",
        "operationId": "QuoteServiceGroups_changeLocations",
        "security": [
          {
            "OAuth2ImplicitBearer": [
              "create:quotes"
            ]
          }
        ],
        "description": "Overwrite the locations on a service group\n\nThe locations included in the request are overwritten as the locations on\nthe service group maintaining the sequence in the request.\nThis action triggers a re-estimation of the service group using the new locations.",
        "parameters": [
          {
            "description": "UUID of the service group",
            "name": "service_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Service Group Id",
              "description": "UUID of the service group",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteServiceGroupsChangeLocationsRequest"
              },
              "examples": {
                "default": {
                  "summary": "Change locations",
                  "description": "Change locations on a service group",
                  "value": [
                    "1a99a4ff641f4040afb2f4f72fe377cc",
                    "bb2078b5d93f44c0a98f268d86540450"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGroupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{quote_id}/service-group/{service_group_id}": {
      "get": {
        "tags": [
          "QuoteServiceGroup"
        ],
        "summary": "Get Service Group",
        "operationId": "QuoteServiceGroups_get",
        "security": [
          {
            "OAuth2ImplicitBearer": [
              "read:quotes"
            ]
          }
        ],
        "description": "Fetch a service group by quote ID and service group ID",
        "parameters": [
          {
            "description": "UUID of the quote",
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Quote Id",
              "description": "UUID of the quote",
              "type": "string"
            }
          },
          {
            "description": "UUID of the service group",
            "name": "service_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Service Group Id",
              "description": "UUID of the service group",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGroupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "QuoteServiceGroup"
        ],
        "summary": "Delete Service Group",
        "operationId": "QuoteServiceGroups_delete",
        "security": [
          {
            "OAuth2ImplicitBearer": [
              "delete:quotes"
            ]
          }
        ],
        "description": "Delete a service group by quote ID and service group ID",
        "parameters": [
          {
            "description": "UUID of the quote",
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Quote Id",
              "description": "UUID of the quote",
              "type": "string"
            }
          },
          {
            "description": "UUID of the service group to be deleted",
            "name": "service_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Service Group Id",
              "description": "UUID of the service group to be deleted",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{quote_id}/service-groups/{service_group_id}": {
      "patch": {
        "tags": [
          "QuoteServiceGroup"
        ],
        "summary": "Replace Service Group",
        "operationId": "QuoteServiceGroup_update",
        "security": [
          {
            "OAuth2ImplicitBearer": [
              "update:quotes"
            ]
          }
        ],
        "description": "Replaces a service group with a flexible service group\n\nReplaces the existing service group with the selected flexible service group.",
        "parameters": [
          {
            "description": "UUID of the quote",
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Quote Id",
              "description": "UUID of the quote",
              "type": "string"
            }
          },
          {
            "description": "UUID of the service group",
            "name": "service_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Service Group Id",
              "description": "UUID of the service group",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceServiceGroupRequest"
              },
              "examples": {
                "default": {
                  "summary": "Replace a service group",
                  "description": "Replace a service group",
                  "value": {
                    "flexible_quote_id": "0dd37117-3e93-4f7c-a496-8418906534e3"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGroupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{quote_id}/service-groups/{service_group_id}/services": {
      "put": {
        "tags": [
          "QuoteServiceGroup"
        ],
        "summary": "Update Service Group Services",
        "operationId": "QuoteServiceGroup_updateServices",
        "security": [
          {
            "OAuth2ImplicitBearer": [
              "update:quotes"
            ]
          }
        ],
        "description": "Update the service configuration on a service group\n\nUpdate services, workers and duration on a service group.\nthe service_workers object is a mapping of service code and number of workers.\n\nOnly the included service codes will be retained on the service group.\n\nAny excluded services will be removed.",
        "parameters": [
          {
            "description": "UUID of the quote",
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Quote Id",
              "description": "UUID of the quote",
              "type": "string"
            }
          },
          {
            "description": "UUID of the service group",
            "name": "service_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Service Group Id",
              "description": "UUID of the service group",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceGroupRequestV2"
              },
              "examples": {
                "default": {
                  "summary": "Update a service group",
                  "description": "Update a service group",
                  "value": {
                    "duration": 120,
                    "service_workers": [
                      {
                        "service_code": "LOADINGUNLOADING",
                        "workers": 2
                      },
                      {
                        "service_code": "TRANSIT",
                        "workers": 2
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGroupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{quote_id}/service-groups/{service_group_id}/flexible": {
      "post": {
        "tags": [
          "QuoteServiceGroup"
        ],
        "summary": "Create Flexible Service Groups",
        "operationId": "QuoteServiceGroup_createFlexible",
        "security": [
          {
            "OAuth2ImplicitBearer": [
              "update:quotes"
            ]
          }
        ],
        "description": "Creates an array of flexible service groups from a service group\n\nGenerate an array of flexible service groups. The services and locations\nwill be copied from the source service group.\nOne flexible service group will be created for each day and hour combination in the input.",
        "parameters": [
          {
            "description": "UUID of the source quote",
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Quote ID",
              "description": "UUID of the source quote",
              "type": "string"
            }
          },
          {
            "description": "UUID of the Service Group to use as a template for the flexible service groups",
            "name": "service_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Service Group ID",
              "description": "UUID of the Service Group to use as a template for the flexible service groups",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlexibleServiceRequest"
              },
              "examples": {
                "default": {
                  "summary": "January, 8-10am",
                  "description": "Create a flexible service group for January, 8-10am",
                  "value": {
                    "start_date": "2024-01-01",
                    "end_date": "2024-02-01",
                    "local_hours": [
                      8,
                      9,
                      10
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteServiceGroupCreateFlexibleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{quote_id}/inventory": {
      "put": {
        "tags": [
          "Quote"
        ],
        "summary": "Update Quote Inventory",
        "operationId": "Quote_updateInventory",
        "security": [
          {
            "OAuth2ImplicitBearer": [
              "update:quotes"
            ]
          }
        ],
        "parameters": [
          {
            "description": "UUID of the inventory",
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Inventory ID",
              "description": "UUID of the inventory",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetQuoteInventoryRequest"
              },
              "examples": {
                "default": {
                  "summary": "Request for updating inventory on a quote",
                  "description": "Replaces inventory record with request body info",
                  "value": {
                    "area": 1500,
                    "intent": "EVERYTHING",
                    "rooms": [
                      {
                        "slug": "primary-bedroom",
                        "count": 1
                      }
                    ],
                    "access_flags": {
                      "elevator": false,
                      "elevator_reserved": false,
                      "long_walk_to_truck": false,
                      "stair_flights": 1
                    },
                    "additional_items": [
                      {
                        "slug": "washing-machine",
                        "count": 1
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteInventoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Quote"
        ],
        "summary": "Delete Quote Inventory",
        "operationId": "Quote_deleteInventory",
        "security": [
          {
            "OAuth2ImplicitBearer": [
              "delete:quotes"
            ]
          }
        ],
        "parameters": [
          {
            "description": "UUID of the inventory",
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Inventory ID",
              "description": "UUID of the inventory",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Quote"
        ],
        "summary": "Get Quote Inventory",
        "operationId": "Quote_getInventory",
        "security": [
          {
            "OAuth2ImplicitBearer": [
              "read:quotes"
            ]
          }
        ],
        "parameters": [
          {
            "description": "UUID of the source quote",
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Quote ID",
              "description": "UUID of the source quote",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteInventoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/service-groups/{service_group_id}/estimate": {
      "post": {
        "tags": [
          "QuoteServiceGroup"
        ],
        "summary": "Get Service Group Estimate",
        "operationId": "QuoteServiceGroup_createEstimate",
        "security": [
          {
            "OAuth2ImplicitBearer": [
              "read:quotes"
            ]
          }
        ],
        "parameters": [
          {
            "description": "UUID of the service group",
            "name": "service_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Service Group Id",
              "description": "UUID of the service group",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/locations": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Create Quoting Location",
        "operationId": "Location_create",
        "security": [
          {
            "OAuth2ImplicitBearer": [
              "create:locations"
            ]
          }
        ],
        "description": "Create quoting location object from address\n\nCreate Quoting Location standardizes input address via USPS and generates\ngeo-location details Google Maps APIs.\nThe location id is a hash of the required fields on the location object.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuotingLocationRequest"
              },
              "examples": {
                "Example": {
                  "summary": "Example",
                  "description": "Example",
                  "value": {
                    "line_1": "123 Main St",
                    "line_2": "Apt 2",
                    "city": "Nashville",
                    "state": "TN",
                    "postal_code": "37201",
                    "country": "US",
                    "property_type": "APARTMENT"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{quote_id}": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Create Order",
        "operationId": "Order_create",
        "security": [
          {
            "OAuth2ImplicitBearer": [
            ]
          }
        ],
        "description": "Creates an order from a quote",
        "parameters": [
          {
            "description": "Quote ID to generate order from",
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Quote Id",
              "description": "Quote ID to generate order from",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponseV2"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessFlagsResponse": {
        "title": "AccessFlagsResponse",
        "properties": {
          "stairs": {
            "title": "Stairs",
            "type": "integer",
            "nullable": true
          },
          "elevator": {
            "title": "Elevator",
            "type": "boolean",
            "nullable": true
          },
          "elevator_reserved": {
            "title": "Elevator Reserved",
            "type": "boolean",
            "nullable": true
          },
          "long_walk_to_truck": {
            "title": "Long Walk To Truck",
            "type": "boolean",
            "nullable": true
          }
        },
        "type": "object"
      },
      "AccountSource": {
        "title": "AccountSource",
        "description": "Pick-list values for account.accountsource",
        "type": "string",
        "enum": [
          "123 Load Board",
          "AllConnect",
          "All My Sons",
          "AllWebLeads",
          "AMLI",
          "Angie's List",
          "Another Bellhop",
          "ApartmentList.com",
          "Apartments.com Site Search",
          "Atlanta Moving Pros",
          "Avail",
          "Avvinue",
          "Bark",
          "BDS",
          "Bellhop Site",
          "Bellhop Site - Booking Flow",
          "Bellhop Site - Out of Service Area",
          "Beyond Self Storage",
          "Brookfield",
          "Citizen Home Solutions",
          "Clever",
          "College Recruiter",
          "Consumer Affairs",
          "Cortland Apartments",
          "Craigslist",
          "Crye-Leike",
          "CubeSmart",
          "Dallas Moving Pros",
          "DAT Load Board",
          "dotdash",
          "DOT Registry",
          "Drive for Bellhops",
          "Email Capture Blog",
          "Email Capture MLP",
          "Email Only",
          "Equate",
          "Equate Live Transfers",
          "Flatrate Moving",
          "Flyhomes",
          "From a Friend",
          "GMB Request a Quote",
          "Google Ads Lead Form",
          "Google Local Services",
          "Google My Business",
          "havenly",
          "Hello Alfred",
          "HireAHelper",
          "HomeAdvisor Exact Match",
          "HomeAdvisor Market Match",
          "Home Depot",
          "homeexpert",
          "HomeGuage",
          "Ideal Agent",
          "Inbound Call",
          "Inbound Call - Drive for Bellhops",
          "Indeed",
          "Intercom Chat",
          "IRELO",
          "Job Case",
          "Landing",
          "Las Vegas Giveaway",
          "Lead Hero",
          "leadvision",
          "Livly",
          "LocalMovingPros.com",
          "LongDistanceMover.com",
          "MCR",
          "Mediabids",
          "Metropolitan Movers",
          "Move Buddha",
          "MoveEasy",
          "MoveHQ",
          "MoveInc",
          "Move Matcher",
          "Movermatch",
          "Moverscom",
          "Moves for Seniors",
          "moving.com",
          "movingbiz",
          "Movingful",
          "movinglabor-lead",
          "movingwaldo",
          "Mr. Cooper",
          "MYMOVE",
          "MyMovingLoads",
          "newkeyz",
          "Offerpad",
          "OJO",
          "OneSource",
          "Other",
          "Outbound Call",
          "Partnerships",
          "PetScreening",
          "PODS",
          "PODS CORP RELO",
          "poweron",
          "property managers",
          "Purchased List",
          "Quote Runner",
          "Quote Runner Exclusive",
          "Quote Runner LIVE",
          "Real Estate Bidders",
          "realtor referrals",
          "Recleim",
          "Redfin",
          "redfin concierge",
          "Referral",
          "rego",
          "Rent Application",
          "Rexdirect",
          "RexDirect Live",
          "RexHomes",
          "San Jose Moving Pros",
          "SeveralBrands",
          "Shyft",
          "site-ld-form",
          "Snag",
          "Social Media",
          "sold.com",
          "Steady",
          "Storage",
          "Suited Connector",
          "Swift Homes",
          "thespruce",
          "Thumbtack",
          "TruckStop Load Board",
          "Updatr",
          "usnews",
          "Utility Connect",
          "Yelp",
          "Yelp RAQ",
          "Zendesk Lead",
          "Zillow",
          "Zillow Builder",
          "Zillow - Outbound",
          "Zippy Shell",
          "Zippy Shell Corp Relo"
        ]
      },
      "Auth0TokenResponse": {
        "title": "Auth0TokenResponse",
        "properties": {
          "token": {
            "title": "Token",
            "type": "string"
          },
          "cached": {
            "title": "Cached",
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "token",
          "cached"
        ]
      },
      "Body_get_auth_token_authorize_post": {
        "title": "Body_get_auth_token_authorize_post",
        "properties": {
          "grant_type": {
            "title": "Grant Type",
            "type": "string",
            "pattern": "client_credentials",
            "nullable": true
          },
          "scope": {
            "title": "Scope",
            "type": "string",
            "default": ""
          },
          "client_id": {
            "title": "Client Id",
            "type": "string"
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateCustomerAccountRequest": {
        "title": "CreateCustomerAccountRequest",
        "description": "Create customer account request",
        "properties": {
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          },
          "phone": {
            "title": "Phone",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "status": {
            "$ref": "#/components/schemas/CustomerStatusNullable"
          },
          "primary_market": {
            "title": "Primary Market",
            "type": "string",
            "nullable": true
          },
          "source": {
            "$ref": "#/components/schemas/AccountSourceNullable"
          },
          "hear_about_us": {
            "$ref": "#/components/schemas/HearAboutUsNullable"
          },
          "owner_code": {
            "title": "Owner Code",
            "type": "string",
            "nullable": true
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "phone",
          "email"
        ]
      },
      "CreateLeadRequest": {
        "title": "CreateLeadRequest",
        "description": "Input model for creating a lead",
        "properties": {
          "description": {
            "title": "Description",
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          },
          "lead_type": {
            "$ref": "#/components/schemas/LeadType"
          },
          "lead_record_type": {
            "$ref": "#/components/schemas/LeadRecordType"
          },
          "external_id": {
            "title": "External Id",
            "type": "string"
          },
          "lead_source": {
            "title": "Lead Source",
            "type": "string",
            "nullable": true
          },
          "email": {
            "title": "Email",
            "type": "string",
            "nullable": true
          },
          "phone": {
            "title": "Phone",
            "type": "string",
            "nullable": true
          },
          "origin_postal_code": {
            "title": "Origin Postal Code",
            "type": "string",
            "nullable": true,
            "example": "85001",
            "x-examples": [
              "85001"
            ]
          },
          "origin_street": {
            "title": "Origin Street",
            "type": "string",
            "nullable": true
          },
          "origin_city": {
            "title": "Origin City",
            "type": "string",
            "nullable": true
          },
          "origin_state": {
            "title": "Origin State",
            "type": "string",
            "nullable": true,
            "example": "AZ",
            "x-examples": [
              "AZ"
            ]
          },
          "origin_square_feet": {
            "title": "Origin Square Feet",
            "type": "integer",
            "nullable": true
          },
          "destination_postal_code": {
            "title": "Destination Postal Code",
            "type": "string",
            "nullable": true,
            "example": "85001",
            "x-examples": [
              "85001"
            ]
          },
          "destination_street": {
            "title": "Destination Street",
            "type": "string",
            "nullable": true
          },
          "destination_city": {
            "title": "Destination City",
            "type": "string",
            "nullable": true
          },
          "destination_state": {
            "title": "Destination State",
            "type": "string",
            "nullable": true,
            "example": "AZ",
            "x-examples": [
              "AZ"
            ]
          },
          "clickid": {
            "title": "Clickid",
            "type": "string",
            "nullable": true
          },
          "gclid": {
            "title": "Gclid",
            "type": "string",
            "nullable": true
          },
          "utm_medium": {
            "title": "Utm Medium",
            "type": "string",
            "nullable": true
          },
          "utm_source": {
            "title": "Utm Source",
            "type": "string",
            "nullable": true
          },
          "utm_campaign": {
            "title": "Utm Campaign",
            "type": "string",
            "nullable": true
          },
          "msclkid": {
            "title": "Msclkid",
            "type": "string",
            "nullable": true
          },
          "load_date": {
            "title": "Load Date",
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2021-01-01",
            "x-examples": [
              "2021-01-01"
            ]
          },
          "close_date": {
            "title": "Close Date",
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2021-01-01",
            "x-examples": [
              "2021-01-01"
            ]
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "lead_type",
          "lead_record_type"
        ]
      },
      "CreateQuoteRequest": {
        "title": "CreateQuoteRequest",
        "description": "Create Quote Request",
        "properties": {
          "customer": {
            "description": "Customer information",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateCustomerAccountRequest"
              }
            ],
            "example": {
              "email": "heythereitsjon@gooogle.com",
              "first_name": "John",
              "last_name": "Doe",
              "phone": "5555555555"
            },
            "x-examples": [
              {
                "email": "heythereitsjon@gooogle.com",
                "first_name": "John",
                "last_name": "Doe",
                "phone": "5555555555"
              }
            ]
          },
          "start_datetime": {
            "title": "Start Datetime",
            "description": "Start date and time of the quote",
            "type": "string",
            "format": "date-time",
            "example": "2024-02-05T15:50:48.765645",
            "x-examples": [
              "2024-02-05T15:50:48.765645"
            ]
          },
          "service_code": {
            "title": "Service Code",
            "description": "Services to be quoted",
            "type": "string",
            "example": "LOCALFULLSERVICE",
            "x-examples": [
              "LOCALFULLSERVICE",
              "LOADING"
            ]
          },
          "locations": {
            "title": "Locations",
            "description": "Mapping locations and their sequence",
            "additionalProperties": {
              "$ref": "#/components/schemas/LocationRequest"
            },
            "type": "object",
            "example": {
              "1": {
                "city": "New York",
                "country": "US",
                "line_1": "123 Main St",
                "postal_code": "10001",
                "property_type": "SINGLE_FAMILY_HOME",
                "state": "NY"
              },
              "2": {
                "city": "New York",
                "country": "US",
                "line_1": "321 Secondary St",
                "postal_code": "10001",
                "property_type": "SINGLE_FAMILY_HOME",
                "state": "NY"
              }
            },
            "x-examples": [
              {
                "1": {
                  "city": "New York",
                  "country": "US",
                  "line_1": "123 Main St",
                  "postal_code": "10001",
                  "property_type": "SINGLE_FAMILY_HOME",
                  "state": "NY"
                },
                "2": {
                  "city": "New York",
                  "country": "US",
                  "line_1": "321 Secondary St",
                  "postal_code": "10001",
                  "property_type": "SINGLE_FAMILY_HOME",
                  "state": "NY"
                }
              }
            ]
          },
          "inventory": {
            "$ref": "#/components/schemas/SetQuoteInventoryRequestNullable"
          }
        },
        "type": "object",
        "required": [
          "customer",
          "start_datetime",
          "service_code",
          "locations"
        ]
      },
      "CreateQuoteServiceGroupRequest": {
        "title": "CreateQuoteServiceGroupRequest",
        "description": "CreateQuoteServiceGroupRequest",
        "properties": {
          "service_codes": {
            "title": "Service Codes",
            "description": "List of service codes",
            "items": {
              "$ref": "#/components/schemas/ServiceType"
            },
            "type": "array",
            "minItems": 1,
            "example": [
              "LOADINGUNLOADING"
            ],
            "x-examples": [
              [
                "LOADINGUNLOADING"
              ]
            ]
          },
          "locations": {
            "title": "Locations",
            "description": "List of location ids",
            "items": {
              "type": "string"
            },
            "type": "array",
            "minItems": 1,
            "example": [
              "a4cef656c2a04ca4aa6d19cee4eb9b7e",
              "b4cef656c2a04ca4aa6d19cee4eb9b7e"
            ],
            "x-examples": [
              [
                "a4cef656c2a04ca4aa6d19cee4eb9b7e",
                "b4cef656c2a04ca4aa6d19cee4eb9b7e"
              ]
            ]
          },
          "start_datetime": {
            "title": "Start Datetime",
            "description": "Start datetime of service group",
            "type": "string",
            "format": "date-time",
            "example": "2021-01-01T12:00:00",
            "x-examples": [
              "2021-01-01T12:00:00"
            ]
          }
        },
        "type": "object",
        "required": [
          "service_codes",
          "locations",
          "start_datetime"
        ]
      },
      "CustomerStatus": {
        "title": "CustomerStatus",
        "type": "string",
        "enum": [
          "Active",
          "Do Not Book",
          "Opportunity"
        ]
      },
      "EstimationAccessFlags": {
        "title": "EstimationAccessFlags",
        "description": "TODO",
        "properties": {
          "elevator": {
            "title": "Elevator",
            "type": "boolean"
          },
          "elevator_reserved": {
            "title": "Elevator Reserved",
            "type": "boolean"
          },
          "long_walk_to_truck": {
            "title": "Long Walk To Truck",
            "type": "boolean"
          },
          "stair_flights": {
            "title": "Stair Flights",
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "elevator",
          "elevator_reserved",
          "long_walk_to_truck",
          "stair_flights"
        ]
      },
      "EstimationResponse": {
        "title": "EstimationResponse",
        "description": "TODO",
        "properties": {
          "crew_size": {
            "title": "Crew Size",
            "type": "integer"
          },
          "hours": {
            "title": "Hours",
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "crew_size",
          "hours"
        ]
      },
      "ExtraDataResponse": {
        "title": "ExtraDataResponse",
        "description": "Extra data for inventory meta-data",
        "properties": {
          "miles_to_origin": {
            "title": "Miles To Origin",
            "type": "integer",
            "nullable": true
          },
          "weight": {
            "title": "Weight",
            "type": "integer",
            "nullable": true
          },
          "assembly": {
            "title": "Assembly",
            "type": "integer",
            "nullable": true
          },
          "disassembly": {
            "title": "Disassembly",
            "type": "integer",
            "nullable": true
          },
          "extra_stop": {
            "title": "Extra Stop",
            "type": "integer",
            "nullable": true
          },
          "zippy_move_type": {
            "title": "Zippy Move Type",
            "type": "string",
            "nullable": true
          },
          "number_of_shells": {
            "title": "Number Of Shells",
            "type": "integer",
            "nullable": true
          },
          "stairs": {
            "title": "Stairs",
            "type": "integer",
            "nullable": true
          },
          "elevator": {
            "title": "Elevator",
            "type": "integer",
            "nullable": true
          },
          "long_haul": {
            "title": "Long Haul",
            "type": "integer",
            "nullable": true
          },
          "adjacent_market": {
            "title": "Adjacent Market",
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object"
      },
      "FlexService": {
        "title": "FlexService",
        "description": "Services nested in flexible package quotes",
        "properties": {
          "service_code": {
            "title": "Service Code",
            "type": "string"
          },
          "estimated_unit_price": {
            "title": "Estimated Unit Price",
            "type": "number"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "estimated_hours": {
            "title": "Estimated Hours",
            "type": "number"
          },
          "estimated_workers": {
            "title": "Estimated Workers",
            "type": "integer"
          },
          "estimated_pricing_strategy": {
            "title": "Estimated Pricing Strategy",
            "type": "string"
          },
          "total_cost": {
            "title": "Total Cost",
            "type": "integer"
          },
          "available": {
            "title": "Available",
            "type": "boolean",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "service_code",
          "estimated_unit_price",
          "id",
          "estimated_hours",
          "estimated_workers",
          "estimated_pricing_strategy",
          "total_cost"
        ]
      },
      "FlexibleQuoteResponse": {
        "title": "FlexibleQuoteResponse",
        "description": "Response for flexible-package quotes",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "start_datetime": {
            "title": "Start Datetime",
            "type": "string",
            "format": "date-time"
          },
          "is_available": {
            "title": "Is Available",
            "type": "boolean"
          },
          "timezone": {
            "title": "Timezone",
            "type": "string"
          },
          "services": {
            "title": "Services",
            "items": {
              "$ref": "#/components/schemas/FlexService"
            },
            "type": "array"
          },
          "total_cost": {
            "title": "Total Cost",
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "start_datetime",
          "is_available",
          "timezone",
          "services"
        ]
      },
      "FlexibleServiceRequest": {
        "title": "FlexibleServiceRequest",
        "description": "Parameters for generating flexible package quotes",
        "properties": {
          "start_date": {
            "title": "Start Date",
            "description": "Date of earliest flexible service quote to generate",
            "type": "string",
            "format": "date",
            "example": "1970-01-01",
            "x-examples": [
              "1970-01-01"
            ]
          },
          "end_date": {
            "title": "End Date",
            "description": "Date of latest flexible service quote to generate",
            "type": "string",
            "format": "date",
            "example": "1970-01-01",
            "x-examples": [
              "1970-01-01"
            ]
          },
          "local_hours": {
            "title": "Local Hours",
            "description": "List of hours in local time to generate quotes for: [8, 9, 10, 11, 12]",
            "default": [
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20
            ],
            "items": {
              "type": "integer",
              "enum": [
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20
              ]
            },
            "type": "array",
            "nullable": true,
            "example": [
              8,
              9,
              10,
              11,
              12
            ],
            "x-examples": [
              [
                8,
                9,
                10,
                11,
                12
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "start_date",
          "end_date"
        ]
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "properties": {
          "detail": {
            "title": "Detail",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "HearAboutUs": {
        "title": "HearAboutUs",
        "description": "Pick-list values for account.how_did_customer_hear_about_us__c",
        "type": "string",
        "enum": [
          "Friend/Family Referral",
          "Google/Bing - Search Engine",
          "Yelp",
          "Billboard",
          "Yard Sign",
          "Truck",
          "Social Media",
          "All My Sons/Another Moving Company",
          "Affiliates/Partners - Groupon",
          "Blog",
          "Outbound lead",
          "Repeat Customer",
          "Skipped",
          "Used Bellhop before",
          "PODS"
        ]
      },
      "InventoryItem": {
        "title": "InventoryItem",
        "description": "Handles rooms and additional items on inventory",
        "properties": {
          "slug": {
            "title": "Slug",
            "type": "string"
          },
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "pretty_name": {
            "title": "Pretty Name",
            "type": "string",
            "nullable": true
          }
        },
        "type": "object",
        "required": [
          "slug",
          "count"
        ]
      },
      "InventoryItemSlug": {
        "title": "InventoryItemSlug",
        "description": "Inventory item slugs",
        "type": "string",
        "enum": [
          "arm-chair",
          "arm-chair-dining",
          "baby-carriage",
          "baby-grand-piano",
          "barbecue-or-portable-grill",
          "barbecue-port-grill",
          "basket-clothes",
          "bathinette",
          "bed-bunk-set-of-2",
          "bed-double-size",
          "bed-king-size",
          "bed-queen-size",
          "bed-single",
          "bed-youth",
          "bench",
          "bicycle",
          "birdbath",
          "book-case",
          "bookcase-large",
          "bookcase-mid",
          "bookcase-small",
          "breakfast-chair",
          "breakfast-table",
          "buffet",
          "bureau",
          "cabinet",
          "cabinet-metal-small",
          "carpet-rug",
          "carton-3",
          "carton-4",
          "carton-5",
          "carton-6",
          "cedar-chest",
          "chair-arm",
          "chair-child",
          "chair-folding",
          "chair-high",
          "chair-lawn",
          "chair-office",
          "chair-porch",
          "chair-stackable",
          "chair-upholstered",
          "chest",
          "chest-toy",
          "china-cabinet",
          "clock-grand-father",
          "clothes-dryer-rack",
          "clothes-line",
          "coat-rack",
          "coffee-tables",
          "computer-desk",
          "cooler-large",
          "cooler-small",
          "copier-stand",
          "corner-cabinet",
          "crate-bin",
          "credenza",
          "crib-baby",
          "cupboard-large",
          "cupboard-small",
          "curtain",
          "desk-executive",
          "desk-return",
          "desk-secretary",
          "dining-chair",
          "dining-table-large-or-glass",
          "dining-table-mid",
          "dining-table-small",
          "dishpack",
          "dishwasher",
          "dresser-chest-of-drawers",
          "dryer",
          "end-table",
          "exercise-bike",
          "file-2-drawer",
          "file-3-drawer",
          "file-4-drawer",
          "file-5-drawer",
          "fire-place-equip",
          "freezer-large",
          "freezer-meid",
          "freezer-small",
          "garden-hose-tools",
          "glass-top",
          "glider-or-settee",
          "grand-piano",
          "ironing-board",
          "kitchen-cabinet",
          "ladder-extension",
          "lamps-floor-or-pole",
          "lawn-mower",
          "lawn-mower-hand",
          "lawn-mower-power",
          "lawn-mower-riding",
          "lazy-boy",
          "leaf-sweeper",
          "magazine-rack",
          "microwave",
          "microwave-stand-cart",
          "mirror",
          "monitor",
          "occasional-chair",
          "outdoor-childs-gym",
          "outdoor-childs-slide",
          "outdoor-drying-rack",
          "outdoor-swing",
          "outdoor-swings",
          "partitions",
          "picnic-bench",
          "picnic-table",
          "pictures",
          "plant-stand",
          "playpen",
          "porch-chair",
          "rack",
          "refrigerator-large-or-dbdoor",
          "refrigerator-med",
          "refrigerator-small",
          "rocker-swing",
          "roller-lawn",
          "rug",
          "rug-large",
          "rug-small",
          "safe",
          "sandbox",
          "serving-cart",
          "settee",
          "shelf-metal-small",
          "shelving-industrial",
          "showcase",
          "side-tables",
          "sofa-2-seater",
          "sofa-3-seater",
          "sofa-4-seater",
          "sofa-bed",
          "sofa-large",
          "sofa-sectional-per-section",
          "sofa-small",
          "spreader",
          "step-ladder",
          "stereo-hi-fi-large",
          "stereo-hi-fi-mid",
          "stool",
          "stove",
          "table",
          "table-childs",
          "table-coffee",
          "table-conference",
          "table-drawing",
          "table-end",
          "table-folding",
          "television",
          "television-table",
          "tool-chest-large",
          "tool-chest-medium",
          "tool-chest-small",
          "treadmill-stairstepper",
          "trunk",
          "umbrella",
          "universal-gym-component",
          "upright-piano",
          "utility-cabinet",
          "vacuum-cleaner",
          "video",
          "wall-unit-large",
          "wall-unit-small",
          "wardrobe-boxes-30-hangers",
          "washing-machine",
          "weight-bench",
          "weight-lbs",
          "wheel-barrow",
          "workbench"
        ]
      },
      "InventoryResponse": {
        "title": "InventoryResponse",
        "description": "TODO",
        "properties": {
          "is_room_based_inventory": {
            "title": "Is Room Based Inventory",
            "type": "boolean"
          },
          "intent": {
            "title": "Intent",
            "type": "string",
            "nullable": true
          },
          "area": {
            "title": "Area",
            "type": "integer",
            "nullable": true
          },
          "access_flags": {
            "$ref": "#/components/schemas/AccessFlagsResponseNullable"
          },
          "extra_data": {
            "$ref": "#/components/schemas/ExtraDataResponseNullable"
          },
          "additional_items": {
            "title": "Additional Items",
            "default": [
            ],
            "items": {
              "$ref": "#/components/schemas/InventoryItem"
            },
            "type": "array",
            "nullable": true
          },
          "rooms": {
            "title": "Rooms",
            "default": [
            ],
            "items": {
              "$ref": "#/components/schemas/InventoryItem"
            },
            "type": "array",
            "nullable": true
          },
          "notes": {
            "title": "Notes",
            "type": "string",
            "nullable": true
          }
        },
        "type": "object",
        "required": [
          "is_room_based_inventory"
        ]
      },
      "InventoryRoomSlug": {
        "title": "InventoryRoomSlug",
        "description": "Inventory room slugs",
        "type": "string",
        "enum": [
          "attic",
          "bonus",
          "dining-room",
          "garage",
          "guest-bedroom",
          "gym",
          "kids-bedroom",
          "kitchen",
          "laundry",
          "living-room",
          "nursery",
          "office",
          "patio",
          "primary-bedroom",
          "storage-closet"
        ]
      },
      "LeadRecordType": {
        "title": "LeadRecordType",
        "type": "string",
        "enum": [
          "Potential Customer",
          "Long Distance Move",
          "Referral"
        ]
      },
      "LeadResponse": {
        "title": "LeadResponse",
        "description": "Response model for lead object",
        "properties": {
          "description": {
            "title": "Description",
            "type": "string",
            "nullable": true
          },
          "clickid": {
            "title": "Clickid",
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Code",
            "type": "string",
            "nullable": true
          },
          "company": {
            "title": "Company",
            "type": "string",
            "nullable": true
          },
          "customer_close_date": {
            "title": "Customer Close Date",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "destination_city": {
            "title": "Destination City",
            "type": "string",
            "nullable": true
          },
          "destination_postal_code": {
            "title": "Destination Postal Code",
            "type": "string",
            "nullable": true
          },
          "destination_state": {
            "title": "Destination State",
            "type": "string",
            "nullable": true
          },
          "destination_street_address": {
            "title": "Destination Street Address",
            "type": "string",
            "nullable": true
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "external_id": {
            "title": "External Id",
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "title": "First Name",
            "type": "string",
            "nullable": true
          },
          "from_market": {
            "title": "From Market",
            "type": "string",
            "nullable": true
          },
          "from_street_address": {
            "title": "From Street Address",
            "type": "string",
            "nullable": true
          },
          "full_address_details": {
            "title": "Full Address Details",
            "type": "string",
            "nullable": true
          },
          "gclid": {
            "title": "Gclid",
            "type": "string",
            "nullable": true
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean",
            "nullable": true
          },
          "last_name": {
            "title": "Last Name",
            "type": "string",
            "nullable": true
          },
          "lead_type": {
            "title": "Lead Type",
            "type": "string",
            "nullable": true
          },
          "lead_source": {
            "title": "Lead Source",
            "type": "string",
            "nullable": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "nullable": true
          },
          "origin_city": {
            "title": "Origin City",
            "type": "string",
            "nullable": true
          },
          "origin_postal_code": {
            "title": "Origin Postal Code",
            "type": "string",
            "nullable": true
          },
          "origin_state": {
            "title": "Origin State",
            "type": "string",
            "nullable": true
          },
          "origin_street_address": {
            "title": "Origin Street Address",
            "type": "string",
            "nullable": true
          },
          "phone": {
            "title": "Phone",
            "type": "string",
            "nullable": true
          },
          "pipes_status": {
            "title": "Pipes Status",
            "type": "string",
            "nullable": true
          },
          "preferred_load_date": {
            "title": "Preferred Load Date",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "primary_lost_reason": {
            "title": "Primary Lost Reason",
            "type": "string",
            "nullable": true
          },
          "recordtype_sfid": {
            "title": "Recordtype Sfid",
            "type": "string",
            "nullable": true
          },
          "square_feet": {
            "title": "Square Feet",
            "type": "string",
            "nullable": true
          },
          "status": {
            "title": "Status",
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "partner_code": {
            "title": "Partner Code",
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "LeadType": {
        "title": "LeadType",
        "type": "string",
        "enum": [
          "Long Distance",
          "Outbound",
          "Offerpad",
          "Partner",
          "Zillow",
          "MLC"
        ]
      },
      "LeadUpdateRequest": {
        "title": "LeadUpdateRequest",
        "properties": {
          "description": {
            "title": "Description",
            "type": "string",
            "nullable": true
          },
          "close_date": {
            "title": "Close Date",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "load_date": {
            "title": "Load Date",
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "type": "object",
        "required": [
          "description"
        ]
      },
      "LocationRequest": {
        "title": "LocationRequest",
        "description": "LocationRequest",
        "properties": {
          "line_1": {
            "title": "Line 1",
            "type": "string"
          },
          "line_2": {
            "title": "Line 2",
            "type": "string",
            "nullable": true
          },
          "city": {
            "title": "City",
            "type": "string"
          },
          "state": {
            "title": "State",
            "type": "string"
          },
          "postal_code": {
            "title": "Postal Code",
            "type": "string"
          },
          "country": {
            "title": "Country",
            "default": "US",
            "type": "string",
            "nullable": true
          },
          "property_type": {
            "$ref": "#/components/schemas/PropertyTypeNullable"
          },
          "rooms": {
            "title": "Rooms",
            "type": "integer",
            "nullable": true
          },
          "area": {
            "title": "Area",
            "type": "integer",
            "nullable": true
          },
          "garage": {
            "title": "Garage",
            "type": "boolean",
            "nullable": true
          },
          "stories": {
            "title": "Stories",
            "type": "integer",
            "nullable": true
          },
          "floor": {
            "title": "Floor",
            "type": "integer",
            "nullable": true
          },
          "attic": {
            "title": "Attic",
            "type": "boolean",
            "nullable": true
          },
          "basement": {
            "title": "Basement",
            "type": "boolean",
            "nullable": true
          }
        },
        "type": "object",
        "required": [
          "line_1",
          "city",
          "state",
          "postal_code"
        ]
      },
      "LocationResponse": {
        "title": "LocationResponse",
        "description": "LocationResponse extends USPSLocationResponse with additional fields",
        "properties": {
          "line_1": {
            "title": "Line 1",
            "description": "Address line 1",
            "type": "string",
            "example": "123 Main St",
            "x-examples": [
              "123 Main St"
            ]
          },
          "line_2": {
            "title": "Line 2",
            "description": "Address line 2",
            "type": "string",
            "nullable": true,
            "example": "Apt 1",
            "x-examples": [
              "Apt 1"
            ]
          },
          "city": {
            "title": "City",
            "description": "City",
            "type": "string",
            "example": "New York City",
            "x-examples": [
              "New York City"
            ]
          },
          "state": {
            "title": "State",
            "description": "State",
            "type": "string",
            "example": "NY",
            "x-examples": [
              "NY"
            ]
          },
          "postal_code": {
            "title": "Postal Code",
            "description": "Postal code",
            "type": "string",
            "example": "10001",
            "x-examples": [
              "10001"
            ]
          },
          "country": {
            "title": "Country",
            "description": "Two Character Country Code",
            "type": "string",
            "example": "US",
            "x-examples": [
              "US"
            ]
          },
          "market_code": {
            "title": "Market Code",
            "description": "Market ID",
            "type": "string",
            "nullable": true,
            "example": "NEW_YORK_NY",
            "x-examples": [
              "NEW_YORK_NY"
            ]
          },
          "id": {
            "title": "Id",
            "description": "Location ID",
            "type": "string",
            "example": "1bcd054ca1bc48a286be06556cabd171",
            "x-examples": [
              "1bcd054ca1bc48a286be06556cabd171"
            ]
          },
          "property_type": {
            "title": "Property Type",
            "description": "Property type",
            "type": "string",
            "nullable": true,
            "example": "APARTMENT",
            "x-examples": [
              "APARTMENT",
              "SINGLE_FAMILY_HOME"
            ]
          },
          "timezone": {
            "title": "Timezone",
            "description": "Timezone",
            "type": "string",
            "nullable": true,
            "example": "America/New_York",
            "x-examples": [
              "America/New_York"
            ]
          },
          "area": {
            "title": "Area",
            "description": "Area in square feet",
            "type": "integer",
            "nullable": true,
            "example": 1000,
            "x-examples": [
              1000
            ]
          }
        },
        "type": "object",
        "required": [
          "line_1",
          "line_2",
          "city",
          "state",
          "postal_code",
          "country",
          "market_code",
          "id",
          "property_type",
          "timezone",
          "area"
        ]
      },
      "MovingIntent": {
        "title": "MovingIntent",
        "type": "string",
        "enum": [
          "EVERYTHING",
          "MOST",
          "HALF",
          "FEW"
        ]
      },
      "OrderResponseV2": {
        "title": "OrderResponseV2",
        "description": "A collection of services, produces and reductions for an order.",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "nullable": true
          },
          "account_code": {
            "title": "Account Code",
            "type": "string",
            "nullable": true
          },
          "affiliated_partner_code": {
            "title": "Affiliated Partner Code",
            "type": "string",
            "nullable": true
          },
          "affiliate_code": {
            "title": "Affiliate Code",
            "type": "string",
            "nullable": true
          },
          "cancellation_reason": {
            "title": "Cancellation Reason",
            "type": "string",
            "nullable": true
          },
          "cancellation_type": {
            "title": "Cancellation Type",
            "type": "string",
            "nullable": true
          },
          "confirmation_number": {
            "title": "Confirmation Number",
            "type": "string",
            "nullable": true
          },
          "created_date": {
            "title": "Created Date",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_date": {
            "title": "End Date",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "end_date_time": {
            "title": "End Date Time",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_time_zone": {
            "title": "End Time Zone",
            "type": "string",
            "nullable": true
          },
          "end_market_code": {
            "title": "End Market Code",
            "type": "string",
            "nullable": true
          },
          "is_fulfilled": {
            "title": "Is Fulfilled",
            "type": "boolean",
            "nullable": true
          },
          "guaranteed": {
            "title": "Guaranteed",
            "type": "boolean",
            "nullable": true
          },
          "long_distance": {
            "title": "Long Distance",
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "nullable": true
          },
          "notes": {
            "title": "Notes",
            "type": "string",
            "nullable": true
          },
          "promo_code": {
            "title": "Promo Code",
            "type": "string",
            "nullable": true
          },
          "reschedule_reason": {
            "title": "Reschedule Reason",
            "type": "string",
            "nullable": true
          },
          "reschedule_type": {
            "title": "Reschedule Type",
            "type": "string",
            "nullable": true
          },
          "start_date_time": {
            "title": "Start Date Time",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "start_market_code": {
            "title": "Start Market Code",
            "type": "string",
            "nullable": true
          },
          "start_time_zone": {
            "title": "Start Time Zone",
            "type": "string",
            "nullable": true
          },
          "status": {
            "title": "Status",
            "type": "string",
            "nullable": true
          },
          "transaction_failure_review": {
            "title": "Transaction Failure Review",
            "type": "boolean",
            "nullable": true
          }
        },
        "type": "object"
      },
      "PostalCodeServiceabilityResponse": {
        "title": "PostalCodeServiceabilityResponse",
        "properties": {
          "postal_code": {
            "title": "Postal Code",
            "type": "string"
          },
          "serviceable": {
            "title": "Serviceable",
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "postal_code",
          "serviceable"
        ]
      },
      "PostalCodesServiceabilityResponse": {
        "title": "PostalCodesServiceabilityResponse",
        "properties": {
          "origin_postal_code": {
            "$ref": "#/components/schemas/PostalCodeServiceabilityResponse"
          },
          "destination_postal_code": {
            "$ref": "#/components/schemas/PostalCodeServiceabilityResponseNullable"
          },
          "services": {
            "title": "Services",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "message": {
            "title": "Message",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "origin_postal_code",
          "services",
          "message"
        ]
      },
      "PriceAdjustmentQuoteResponse": {
        "title": "PriceAdjustmentQuoteResponse",
        "description": "QuoteResponse serializes a Product quote object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "nullable": true
          },
          "adjustment_code": {
            "title": "Adjustment Code",
            "type": "string",
            "nullable": true
          },
          "adjustment_family": {
            "title": "Adjustment Family",
            "type": "string",
            "nullable": true
          },
          "adjustment_value": {
            "title": "Adjustment Value",
            "type": "integer",
            "nullable": true
          },
          "adjustment_type": {
            "title": "Adjustment Type",
            "type": "string",
            "nullable": true
          },
          "estimated_amount": {
            "title": "Estimated Amount",
            "type": "integer",
            "nullable": true
          },
          "adjustment_description": {
            "title": "Adjustment Description",
            "type": "string",
            "nullable": true
          },
          "adjustment_reason": {
            "title": "Adjustment Reason",
            "type": "string",
            "nullable": true
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "ProductQuoteResponse": {
        "title": "ProductQuoteResponse",
        "description": "QuoteResponse serializes a Product quote object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "product_code": {
            "title": "Product Code",
            "type": "string",
            "nullable": true
          },
          "estimated_quantity": {
            "title": "Estimated Quantity",
            "type": "integer",
            "nullable": true
          },
          "estimated_unit_price": {
            "title": "Estimated Unit Price",
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "PropertyType": {
        "title": "PropertyType",
        "type": "string",
        "enum": [
          "APARTMENT",
          "COMMERCIAL",
          "OTHER",
          "MULTI_FAMILY_HOME",
          "SINGLE_FAMILY_HOME",
          "STORAGE"
        ]
      },
      "QuoteInventoryItem": {
        "title": "QuoteInventoryItem",
        "description": "Model for quote inventory items",
        "properties": {
          "slug": {
            "description": "The name slug of the item.",
            "allOf": [
              {
                "$ref": "#/components/schemas/InventoryItemSlug"
              }
            ],
            "example": "washing-machine",
            "x-examples": [
              "washing-machine"
            ]
          },
          "count": {
            "title": "Count",
            "description": "The count of the item.",
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "slug",
          "count"
        ]
      },
      "QuoteInventoryResponse": {
        "title": "QuoteInventoryResponse",
        "description": "Response model for quote inventory",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "quote_id": {
            "title": "Quote Id",
            "type": "string",
            "format": "uuid"
          },
          "area": {
            "title": "Area",
            "type": "integer"
          },
          "rooms": {
            "title": "Rooms",
            "items": {
              "$ref": "#/components/schemas/QuoteInventoryRoom"
            },
            "type": "array"
          },
          "access_flags": {
            "$ref": "#/components/schemas/EstimationAccessFlags"
          },
          "intent": {
            "$ref": "#/components/schemas/MovingIntent"
          },
          "additional_items": {
            "title": "Additional Items",
            "default": [
            ],
            "items": {
              "$ref": "#/components/schemas/QuoteInventoryItem"
            },
            "type": "array",
            "nullable": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "quote_id",
          "area",
          "rooms",
          "access_flags",
          "intent"
        ]
      },
      "QuoteInventoryRoom": {
        "title": "QuoteInventoryRoom",
        "description": "Model for quote inventory rooms",
        "properties": {
          "slug": {
            "description": "The name slug of the room.",
            "allOf": [
              {
                "$ref": "#/components/schemas/InventoryRoomSlug"
              }
            ],
            "example": "primary-bedroom",
            "x-examples": [
              "primary-bedroom"
            ]
          },
          "count": {
            "title": "Count",
            "description": "The count of the room.",
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "slug",
          "count"
        ]
      },
      "QuoteResponse": {
        "title": "QuoteResponse",
        "description": "QuoteResponse serializes a quote object",
        "properties": {
          "id": {
            "title": "Id",
            "description": "Quote ID",
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "title": "Created At",
            "description": "Created at",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "description": "Last updated at",
            "type": "string",
            "format": "date-time"
          },
          "price_updated_at": {
            "title": "Price Updated At",
            "description": "Price updated at",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "partner_code": {
            "title": "Partner Code",
            "description": "ID of the Partner that generated the quote",
            "type": "string",
            "nullable": true
          },
          "customer_code": {
            "title": "Customer Code",
            "description": "Customer ID",
            "type": "string",
            "nullable": true
          },
          "service_groups": {
            "title": "Service Groups",
            "description": "Quote Service Group objects",
            "items": {
              "$ref": "#/components/schemas/ServiceGroupResponse"
            },
            "type": "array",
            "nullable": true
          },
          "products": {
            "title": "Products",
            "description": "Quote Product objects",
            "items": {
              "$ref": "#/components/schemas/ProductQuoteResponse"
            },
            "type": "array",
            "nullable": true
          },
          "price_adjustments": {
            "title": "Price Adjustments",
            "description": "Quote Price Adjustment objects",
            "items": {
              "$ref": "#/components/schemas/PriceAdjustmentQuoteResponse"
            },
            "type": "array",
            "nullable": true
          },
          "inventory": {
            "$ref": "#/components/schemas/InventoryResponseNullable"
          },
          "totals": {
            "$ref": "#/components/schemas/TotalsNullable"
          },
          "inventory_type": {
            "title": "Inventory Type",
            "description": "Quote Inventory type",
            "type": "string",
            "nullable": true
          },
          "marketplace_availability": {
            "title": "Marketplace Availability",
            "type": "string",
            "nullable": true
          },
          "valid_price": {
            "title": "Valid Price",
            "description": "Quote price is valid, if false, the quote is not eligible to be booked",
            "type": "boolean",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "price_updated_at",
          "partner_code",
          "customer_code",
          "service_groups",
          "products",
          "price_adjustments",
          "inventory",
          "totals",
          "inventory_type"
        ]
      },
      "QuotingLocationRequest": {
        "title": "QuotingLocationRequest",
        "description": "PASS",
        "properties": {
          "line_1": {
            "title": "Line 1",
            "type": "string"
          },
          "line_2": {
            "title": "Line 2",
            "type": "string",
            "nullable": true
          },
          "city": {
            "title": "City",
            "type": "string"
          },
          "state": {
            "title": "State",
            "type": "string"
          },
          "postal_code": {
            "title": "Postal Code",
            "type": "string"
          },
          "country": {
            "title": "Country",
            "default": "US",
            "type": "string",
            "nullable": true
          },
          "property_type": {
            "description": "Type of the property.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PropertyType"
              }
            ],
            "example": "APARTMENT",
            "x-examples": [
              "APARTMENT"
            ]
          },
          "rooms": {
            "title": "Rooms",
            "description": "Number of rooms in the property.",
            "type": "integer",
            "minimum": 0,
            "nullable": true
          },
          "area": {
            "title": "Area",
            "description": "Total area of the property in square feet.",
            "type": "integer",
            "minimum": 0,
            "nullable": true
          },
          "garage": {
            "title": "Garage",
            "description": "Indicates whether the property has a garage or not.",
            "type": "boolean",
            "nullable": true
          },
          "stories": {
            "title": "Stories",
            "description": "Number of stories or floors in the property.",
            "type": "integer",
            "minimum": 0,
            "nullable": true
          },
          "floor": {
            "title": "Floor",
            "description": "Floor number of the property.",
            "type": "integer",
            "minimum": 0,
            "nullable": true
          },
          "attic": {
            "title": "Attic",
            "description": "Indicates whether the property has an attic or not.",
            "type": "boolean",
            "nullable": true
          },
          "basement": {
            "title": "Basement",
            "description": "Indicates whether the property has a basement or not.",
            "type": "boolean",
            "nullable": true
          }
        },
        "type": "object",
        "required": [
          "line_1",
          "city",
          "state",
          "postal_code",
          "property_type"
        ]
      },
      "ReplaceServiceGroupRequest": {
        "title": "ReplaceServiceGroupRequest",
        "description": "Request body for replacing a service group.\n\nflexible_quote_id: id of flexible quote replacing target service group attributes",
        "properties": {
          "flexible_quote_id": {
            "title": "Flexible Quote Id",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "flexible_quote_id"
        ]
      },
      "ServiceGroupResponse": {
        "title": "ServiceGroupResponse",
        "description": "ServiceGroupResponse serializes a service group object",
        "properties": {
          "id": {
            "title": "Id",
            "description": "Service Group ID",
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "title": "Created At",
            "description": "Created at",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "description": "Last updated at",
            "type": "string",
            "format": "date-time"
          },
          "quote_id": {
            "title": "Quote Id",
            "description": "Quote ID",
            "type": "string",
            "format": "uuid"
          },
          "total_cost": {
            "title": "Total Cost",
            "description": "Total estimated cost of the service group",
            "type": "integer",
            "nullable": true
          },
          "locations": {
            "title": "Locations",
            "description": "Quote Location objects",
            "items": {
              "$ref": "#/components/schemas/ServiceQuoteLocationResponse"
            },
            "type": "array"
          },
          "services": {
            "title": "Services",
            "description": "Quote Service objects",
            "items": {
              "$ref": "#/components/schemas/ServiceQuoteResponseV2"
            },
            "type": "array",
            "example": [
              {
                "created_at": "2024-02-05T15:50:47.449384+00:00",
                "end_datetime": "2024-02-05T15:50:47.449396+00:00",
                "end_timezone": "America/New_York",
                "estimated_hours": 2.5,
                "estimated_pricing_strategy": "HOURLY",
                "estimated_unit_price": 10000,
                "estimated_workers": 2,
                "id": "06f0decc-82dd-494d-8d9b-0261346d4bc5",
                "locked": false,
                "service_code": "LOADING",
                "service_group_id": "8dbc30c0-8442-4368-a0f5-fb05e36a668c",
                "start_datetime": "2024-02-05T15:50:47.449395+00:00",
                "start_timezone": "America/New_York",
                "total_cost": 10000,
                "updated_at": "2024-02-05T15:50:47.449394+00:00"
              }
            ],
            "x-examples": [
              [
                {
                  "created_at": "2024-02-05T15:50:47.449384+00:00",
                  "end_datetime": "2024-02-05T15:50:47.449396+00:00",
                  "end_timezone": "America/New_York",
                  "estimated_hours": 2.5,
                  "estimated_pricing_strategy": "HOURLY",
                  "estimated_unit_price": 10000,
                  "estimated_workers": 2,
                  "id": "06f0decc-82dd-494d-8d9b-0261346d4bc5",
                  "locked": false,
                  "service_code": "LOADING",
                  "service_group_id": "8dbc30c0-8442-4368-a0f5-fb05e36a668c",
                  "start_datetime": "2024-02-05T15:50:47.449395+00:00",
                  "start_timezone": "America/New_York",
                  "total_cost": 10000,
                  "updated_at": "2024-02-05T15:50:47.449394+00:00"
                }
              ]
            ]
          },
          "locked": {
            "title": "Locked",
            "description": "A locked service group cannot be modified",
            "type": "boolean",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "quote_id",
          "total_cost",
          "locations",
          "services"
        ]
      },
      "ServiceQuoteLocationResponse": {
        "title": "ServiceQuoteLocationResponse",
        "description": "QuoteResponse serializes a service quote location object",
        "properties": {
          "location_id": {
            "title": "Location Id",
            "description": "Location ID",
            "type": "string",
            "example": "abl1304jdfh0",
            "x-examples": [
              "abl1304jdfh0"
            ]
          },
          "sequence": {
            "title": "Sequence",
            "description": "Location sequence within a service group. Sequence 0 is first",
            "type": "integer",
            "nullable": true,
            "example": 1,
            "x-examples": [
              1
            ]
          },
          "location": {
            "$ref": "#/components/schemas/LocationResponseNullable"
          }
        },
        "type": "object",
        "required": [
          "location_id",
          "sequence",
          "location"
        ]
      },
      "ServiceQuoteResponseV2": {
        "title": "ServiceQuoteResponseV2",
        "description": "QuoteResponse serializes a service quote object",
        "properties": {
          "id": {
            "title": "Id",
            "description": "Service Quote ID",
            "type": "string",
            "format": "uuid",
            "example": "063aa72b-b818-4cf3-866c-03841252f3cc",
            "x-examples": [
              "063aa72b-b818-4cf3-866c-03841252f3cc"
            ]
          },
          "created_at": {
            "title": "Created At",
            "description": "Created at",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2024-01-02T12:00:00",
            "x-examples": [
              "2024-01-02T12:00:00"
            ]
          },
          "updated_at": {
            "title": "Updated At",
            "description": "Last updated at",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2024-01-02T12:00:00",
            "x-examples": [
              "2024-01-02T12:00:00"
            ]
          },
          "start_datetime": {
            "title": "Start Datetime",
            "description": "Start datetime",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2024-01-02T12:00:00",
            "x-examples": [
              "2024-01-02T12:00:00"
            ]
          },
          "end_datetime": {
            "title": "End Datetime",
            "description": "End datetime",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2024-01-02T12:00:00",
            "x-examples": [
              "2024-01-02T12:00:00"
            ]
          },
          "start_timezone": {
            "title": "Start Timezone",
            "description": "Timezone of the start datetime",
            "type": "string",
            "nullable": true,
            "example": "America/New_York",
            "x-examples": [
              "America/New_York"
            ]
          },
          "end_timezone": {
            "title": "End Timezone",
            "description": "Timezone of the end datetime",
            "type": "string",
            "nullable": true,
            "example": "America/New_York",
            "x-examples": [
              "America/New_York"
            ]
          },
          "estimated_hours": {
            "title": "Estimated Hours",
            "description": "Estimated number of hours",
            "type": "number",
            "nullable": true,
            "example": 2.5,
            "x-examples": [
              2.5
            ]
          },
          "estimated_workers": {
            "title": "Estimated Workers",
            "description": "Estimated number of workers",
            "type": "integer",
            "nullable": true,
            "example": 2,
            "x-examples": [
              2
            ]
          },
          "estimated_unit_price": {
            "title": "Estimated Unit Price",
            "description": "Estimated unit price in cents",
            "type": "integer",
            "nullable": true,
            "example": 10000,
            "x-examples": [
              10000
            ]
          },
          "estimated_pricing_strategy": {
            "title": "Estimated Pricing Strategy",
            "description": "Pricing strategy",
            "type": "string",
            "nullable": true,
            "example": "HOURLY",
            "x-examples": [
              "HOURLY",
              "FIXED"
            ]
          },
          "service_group_id": {
            "title": "Service Group Id",
            "description": "Service Group ID",
            "type": "string",
            "format": "uuid",
            "example": "c3a48bae-de16-421f-9f7b-81db92ace33e",
            "x-examples": [
              "c3a48bae-de16-421f-9f7b-81db92ace33e"
            ]
          },
          "service_code": {
            "title": "Service Code",
            "description": "Service code",
            "type": "string",
            "example": "LOADING",
            "x-examples": [
              "LOADING"
            ]
          },
          "total_cost": {
            "title": "Total Cost",
            "description": "Total estimated cost of the service",
            "type": "integer",
            "nullable": true,
            "example": 10000,
            "x-examples": [
              10000
            ]
          },
          "locked": {
            "title": "Locked",
            "description": "A locked service cannot be modified",
            "type": "boolean",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "start_datetime",
          "end_datetime",
          "start_timezone",
          "end_timezone",
          "estimated_hours",
          "estimated_workers",
          "estimated_unit_price",
          "estimated_pricing_strategy",
          "service_group_id",
          "service_code",
          "total_cost"
        ]
      },
      "ServiceType": {
        "title": "ServiceType",
        "description": "ServiceType",
        "type": "string",
        "enum": [
          "HOURLYLABOR",
          "LOADING",
          "LOADINGUNLOADING",
          "PACKINGSERVICE",
          "TRANSIT",
          "LDTRANSIT",
          "UNLOADING",
          "FINALMILE",
          "JUNKREMOVAL",
          "CARSHIPPING",
          "RELOSERVICES",
          "LOCALFULLSERVICE"
        ]
      },
      "ServiceWorkers": {
        "title": "ServiceWorkers",
        "description": "ServiceWorkers",
        "properties": {
          "service_code": {
            "description": "Service Type",
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceType"
              }
            ],
            "example": "TRANSIT",
            "x-examples": [
              "TRANSIT"
            ]
          },
          "workers": {
            "title": "Workers",
            "description": "Number of workers",
            "type": "integer",
            "minimum": 1,
            "example": 1,
            "x-examples": [
              1
            ]
          }
        },
        "type": "object",
        "required": [
          "service_code",
          "workers"
        ]
      },
      "SetQuoteInventoryRequest": {
        "title": "SetQuoteInventoryRequest",
        "description": "Request body for updating room based inventory related to a quote",
        "properties": {
          "area": {
            "title": "Area",
            "description": "The area of the property in square feet.",
            "type": "integer",
            "example": 1000,
            "x-examples": [
              1000,
              2500,
              3000
            ]
          },
          "intent": {
            "$ref": "#/components/schemas/MovingIntentNullable"
          },
          "rooms": {
            "title": "Rooms",
            "description": "List of rooms in the property.",
            "items": {
              "$ref": "#/components/schemas/QuoteInventoryRoom"
            },
            "type": "array",
            "example": {
              "count": 1,
              "slug": "primary-bedroom"
            },
            "x-examples": [
              {
                "count": 1,
                "slug": "primary-bedroom"
              }
            ]
          },
          "access_flags": {
            "description": "Access challenges for the property.",
            "allOf": [
              {
                "$ref": "#/components/schemas/EstimationAccessFlags"
              }
            ],
            "example": {
              "elevator": false,
              "elevator_reserved": false,
              "long_walk_to_truck": false,
              "stair_flights": 1
            },
            "x-examples": [
              {
                "elevator": false,
                "elevator_reserved": false,
                "long_walk_to_truck": false,
                "stair_flights": 1
              }
            ]
          },
          "additional_items": {
            "title": "Additional Items",
            "description": "List of additional bulky items in the property.",
            "items": {
              "$ref": "#/components/schemas/QuoteInventoryItem"
            },
            "type": "array",
            "nullable": true,
            "example": {
              "count": 1,
              "slug": "washing-machine"
            },
            "x-examples": [
              {
                "count": 1,
                "slug": "washing-machine"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "area",
          "rooms",
          "access_flags"
        ]
      },
      "Totals": {
        "title": "Totals",
        "description": "Response for computed quote totals (populated by Quote.totals property)",
        "properties": {
          "service_total": {
            "title": "Service Total",
            "type": "integer"
          },
          "product_total": {
            "title": "Product Total",
            "type": "integer"
          },
          "fee_total": {
            "title": "Fee Total",
            "type": "integer"
          },
          "subtotal": {
            "title": "Subtotal",
            "type": "integer"
          },
          "discount_total": {
            "title": "Discount Total",
            "type": "integer"
          },
          "total": {
            "title": "Total",
            "type": "integer"
          },
          "deposit_amount": {
            "title": "Deposit Amount",
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "service_total",
          "product_total",
          "fee_total",
          "subtotal",
          "discount_total",
          "total",
          "deposit_amount"
        ]
      },
      "UpdateServiceGroupRequestV2": {
        "title": "UpdateServiceGroupRequestV2",
        "description": "Request body for updating a service group.",
        "properties": {
          "duration": {
            "title": "Duration",
            "description": "Duration for all services in group",
            "type": "number",
            "minimum": 1,
            "nullable": true
          },
          "service_workers": {
            "title": "Service Workers",
            "description": "Mapping of service code and number of workers. Only the included service codes will be retained on the service group. Any excluded services will be removed.",
            "items": {
              "$ref": "#/components/schemas/ServiceWorkers"
            },
            "type": "array",
            "minItems": 1,
            "example": [
              {
                "service_code": "TRANSIT",
                "workers": 1
              }
            ],
            "x-examples": [
              [
                {
                  "service_code": "TRANSIT",
                  "workers": 1
                }
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "service_workers"
        ]
      },
      "ValidationError": {
        "title": "ValidationError",
        "properties": {
          "loc": {
            "title": "Location",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array"
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ]
      },
      "CustomerStatusNullable": {
        "title": "CustomerStatus",
        "description": "Customer status",
        "type": "string",
        "enum": [
          "Active",
          "Do Not Book",
          "Opportunity"
        ],
        "nullable": true,
        "example": "Active",
        "x-examples": [
          "Active"
        ]
      },
      "AccountSourceNullable": {
        "title": "AccountSource",
        "description": "Pick-list values for account.accountsource",
        "type": "string",
        "enum": [
          "123 Load Board",
          "AllConnect",
          "All My Sons",
          "AllWebLeads",
          "AMLI",
          "Angie's List",
          "Another Bellhop",
          "ApartmentList.com",
          "Apartments.com Site Search",
          "Atlanta Moving Pros",
          "Avail",
          "Avvinue",
          "Bark",
          "BDS",
          "Bellhop Site",
          "Bellhop Site - Booking Flow",
          "Bellhop Site - Out of Service Area",
          "Beyond Self Storage",
          "Brookfield",
          "Citizen Home Solutions",
          "Clever",
          "College Recruiter",
          "Consumer Affairs",
          "Cortland Apartments",
          "Craigslist",
          "Crye-Leike",
          "CubeSmart",
          "Dallas Moving Pros",
          "DAT Load Board",
          "dotdash",
          "DOT Registry",
          "Drive for Bellhops",
          "Email Capture Blog",
          "Email Capture MLP",
          "Email Only",
          "Equate",
          "Equate Live Transfers",
          "Flatrate Moving",
          "Flyhomes",
          "From a Friend",
          "GMB Request a Quote",
          "Google Ads Lead Form",
          "Google Local Services",
          "Google My Business",
          "havenly",
          "Hello Alfred",
          "HireAHelper",
          "HomeAdvisor Exact Match",
          "HomeAdvisor Market Match",
          "Home Depot",
          "homeexpert",
          "HomeGuage",
          "Ideal Agent",
          "Inbound Call",
          "Inbound Call - Drive for Bellhops",
          "Indeed",
          "Intercom Chat",
          "IRELO",
          "Job Case",
          "Landing",
          "Las Vegas Giveaway",
          "Lead Hero",
          "leadvision",
          "Livly",
          "LocalMovingPros.com",
          "LongDistanceMover.com",
          "MCR",
          "Mediabids",
          "Metropolitan Movers",
          "Move Buddha",
          "MoveEasy",
          "MoveHQ",
          "MoveInc",
          "Move Matcher",
          "Movermatch",
          "Moverscom",
          "Moves for Seniors",
          "moving.com",
          "movingbiz",
          "Movingful",
          "movinglabor-lead",
          "movingwaldo",
          "Mr. Cooper",
          "MYMOVE",
          "MyMovingLoads",
          "newkeyz",
          "Offerpad",
          "OJO",
          "OneSource",
          "Other",
          "Outbound Call",
          "Partnerships",
          "PetScreening",
          "PODS",
          "PODS CORP RELO",
          "poweron",
          "property managers",
          "Purchased List",
          "Quote Runner",
          "Quote Runner Exclusive",
          "Quote Runner LIVE",
          "Real Estate Bidders",
          "realtor referrals",
          "Recleim",
          "Redfin",
          "redfin concierge",
          "Referral",
          "rego",
          "Rent Application",
          "Rexdirect",
          "RexDirect Live",
          "RexHomes",
          "San Jose Moving Pros",
          "SeveralBrands",
          "Shyft",
          "site-ld-form",
          "Snag",
          "Social Media",
          "sold.com",
          "Steady",
          "Storage",
          "Suited Connector",
          "Swift Homes",
          "thespruce",
          "Thumbtack",
          "TruckStop Load Board",
          "Updatr",
          "usnews",
          "Utility Connect",
          "Yelp",
          "Yelp RAQ",
          "Zendesk Lead",
          "Zillow",
          "Zillow Builder",
          "Zillow - Outbound",
          "Zippy Shell",
          "Zippy Shell Corp Relo"
        ],
        "nullable": true
      },
      "HearAboutUsNullable": {
        "title": "HearAboutUs",
        "description": "Pick-list values for account.how_did_customer_hear_about_us__c",
        "type": "string",
        "enum": [
          "Friend/Family Referral",
          "Google/Bing - Search Engine",
          "Yelp",
          "Billboard",
          "Yard Sign",
          "Truck",
          "Social Media",
          "All My Sons/Another Moving Company",
          "Affiliates/Partners - Groupon",
          "Blog",
          "Outbound lead",
          "Repeat Customer",
          "Skipped",
          "Used Bellhop before",
          "PODS"
        ],
        "nullable": true
      },
      "SetQuoteInventoryRequestNullable": {
        "title": "SetQuoteInventoryRequest",
        "description": "Inventory to be quoted",
        "properties": {
          "area": {
            "title": "Area",
            "description": "The area of the property in square feet.",
            "type": "integer",
            "example": 1000,
            "x-examples": [
              1000,
              2500,
              3000
            ]
          },
          "intent": {
            "$ref": "#/components/schemas/MovingIntentNullable"
          },
          "rooms": {
            "title": "Rooms",
            "description": "List of rooms in the property.",
            "items": {
              "$ref": "#/components/schemas/QuoteInventoryRoom"
            },
            "type": "array",
            "example": {
              "count": 1,
              "slug": "primary-bedroom"
            },
            "x-examples": [
              {
                "count": 1,
                "slug": "primary-bedroom"
              }
            ]
          },
          "access_flags": {
            "description": "Access challenges for the property.",
            "allOf": [
              {
                "$ref": "#/components/schemas/EstimationAccessFlags"
              }
            ],
            "example": {
              "elevator": false,
              "elevator_reserved": false,
              "long_walk_to_truck": false,
              "stair_flights": 1
            },
            "x-examples": [
              {
                "elevator": false,
                "elevator_reserved": false,
                "long_walk_to_truck": false,
                "stair_flights": 1
              }
            ]
          },
          "additional_items": {
            "title": "Additional Items",
            "description": "List of additional bulky items in the property.",
            "items": {
              "$ref": "#/components/schemas/QuoteInventoryItem"
            },
            "type": "array",
            "nullable": true,
            "example": {
              "count": 1,
              "slug": "washing-machine"
            },
            "x-examples": [
              {
                "count": 1,
                "slug": "washing-machine"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "area",
          "rooms",
          "access_flags"
        ],
        "nullable": true,
        "example": {
          "access_flags": {
            "elevator": false,
            "elevator_reserved": false,
            "long_walk_to_truck": false,
            "stair_flights": 1
          },
          "additional_items": [
            {
              "count": 1,
              "slug": "washing-machine"
            }
          ],
          "area": 1500,
          "intent": "EVERYTHING",
          "rooms": [
            {
              "count": 1,
              "slug": "primary-bedroom"
            }
          ]
        },
        "x-examples": [
          {
            "access_flags": {
              "elevator": false,
              "elevator_reserved": false,
              "long_walk_to_truck": false,
              "stair_flights": 1
            },
            "additional_items": [
              {
                "count": 1,
                "slug": "washing-machine"
              }
            ],
            "area": 1500,
            "intent": "EVERYTHING",
            "rooms": [
              {
                "count": 1,
                "slug": "primary-bedroom"
              }
            ]
          }
        ]
      },
      "AccessFlagsResponseNullable": {
        "title": "AccessFlagsResponse",
        "properties": {
          "stairs": {
            "title": "Stairs",
            "type": "integer",
            "nullable": true
          },
          "elevator": {
            "title": "Elevator",
            "type": "boolean",
            "nullable": true
          },
          "elevator_reserved": {
            "title": "Elevator Reserved",
            "type": "boolean",
            "nullable": true
          },
          "long_walk_to_truck": {
            "title": "Long Walk To Truck",
            "type": "boolean",
            "nullable": true
          }
        },
        "type": "object",
        "default": {
        },
        "nullable": true
      },
      "ExtraDataResponseNullable": {
        "title": "ExtraDataResponse",
        "description": "Extra data for inventory meta-data",
        "properties": {
          "miles_to_origin": {
            "title": "Miles To Origin",
            "type": "integer",
            "nullable": true
          },
          "weight": {
            "title": "Weight",
            "type": "integer",
            "nullable": true
          },
          "assembly": {
            "title": "Assembly",
            "type": "integer",
            "nullable": true
          },
          "disassembly": {
            "title": "Disassembly",
            "type": "integer",
            "nullable": true
          },
          "extra_stop": {
            "title": "Extra Stop",
            "type": "integer",
            "nullable": true
          },
          "zippy_move_type": {
            "title": "Zippy Move Type",
            "type": "string",
            "nullable": true
          },
          "number_of_shells": {
            "title": "Number Of Shells",
            "type": "integer",
            "nullable": true
          },
          "stairs": {
            "title": "Stairs",
            "type": "integer",
            "nullable": true
          },
          "elevator": {
            "title": "Elevator",
            "type": "integer",
            "nullable": true
          },
          "long_haul": {
            "title": "Long Haul",
            "type": "integer",
            "nullable": true
          },
          "adjacent_market": {
            "title": "Adjacent Market",
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object",
        "default": {
        },
        "nullable": true
      },
      "PropertyTypeNullable": {
        "title": "PropertyType",
        "type": "string",
        "enum": [
          "APARTMENT",
          "COMMERCIAL",
          "OTHER",
          "MULTI_FAMILY_HOME",
          "SINGLE_FAMILY_HOME",
          "STORAGE"
        ],
        "default": "SINGLE_FAMILY_HOME",
        "nullable": true
      },
      "PostalCodeServiceabilityResponseNullable": {
        "title": "PostalCodeServiceabilityResponse",
        "properties": {
          "postal_code": {
            "title": "Postal Code",
            "type": "string"
          },
          "serviceable": {
            "title": "Serviceable",
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "postal_code",
          "serviceable"
        ],
        "nullable": true
      },
      "InventoryResponseNullable": {
        "title": "InventoryResponse",
        "description": "Quote Inventory object",
        "properties": {
          "is_room_based_inventory": {
            "title": "Is Room Based Inventory",
            "type": "boolean"
          },
          "intent": {
            "title": "Intent",
            "type": "string",
            "nullable": true
          },
          "area": {
            "title": "Area",
            "type": "integer",
            "nullable": true
          },
          "access_flags": {
            "$ref": "#/components/schemas/AccessFlagsResponseNullable"
          },
          "extra_data": {
            "$ref": "#/components/schemas/ExtraDataResponseNullable"
          },
          "additional_items": {
            "title": "Additional Items",
            "default": [
            ],
            "items": {
              "$ref": "#/components/schemas/InventoryItem"
            },
            "type": "array",
            "nullable": true
          },
          "rooms": {
            "title": "Rooms",
            "default": [
            ],
            "items": {
              "$ref": "#/components/schemas/InventoryItem"
            },
            "type": "array",
            "nullable": true
          },
          "notes": {
            "title": "Notes",
            "type": "string",
            "nullable": true
          }
        },
        "type": "object",
        "required": [
          "is_room_based_inventory"
        ],
        "nullable": true
      },
      "TotalsNullable": {
        "title": "Totals",
        "description": "Quote total estimated cost",
        "properties": {
          "service_total": {
            "title": "Service Total",
            "type": "integer"
          },
          "product_total": {
            "title": "Product Total",
            "type": "integer"
          },
          "fee_total": {
            "title": "Fee Total",
            "type": "integer"
          },
          "subtotal": {
            "title": "Subtotal",
            "type": "integer"
          },
          "discount_total": {
            "title": "Discount Total",
            "type": "integer"
          },
          "total": {
            "title": "Total",
            "type": "integer"
          },
          "deposit_amount": {
            "title": "Deposit Amount",
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "service_total",
          "product_total",
          "fee_total",
          "subtotal",
          "discount_total",
          "total",
          "deposit_amount"
        ],
        "nullable": true
      },
      "LocationResponseNullable": {
        "title": "LocationResponse",
        "description": "Location object",
        "properties": {
          "line_1": {
            "title": "Line 1",
            "description": "Address line 1",
            "type": "string",
            "example": "123 Main St",
            "x-examples": [
              "123 Main St"
            ]
          },
          "line_2": {
            "title": "Line 2",
            "description": "Address line 2",
            "type": "string",
            "nullable": true,
            "example": "Apt 1",
            "x-examples": [
              "Apt 1"
            ]
          },
          "city": {
            "title": "City",
            "description": "City",
            "type": "string",
            "example": "New York City",
            "x-examples": [
              "New York City"
            ]
          },
          "state": {
            "title": "State",
            "description": "State",
            "type": "string",
            "example": "NY",
            "x-examples": [
              "NY"
            ]
          },
          "postal_code": {
            "title": "Postal Code",
            "description": "Postal code",
            "type": "string",
            "example": "10001",
            "x-examples": [
              "10001"
            ]
          },
          "country": {
            "title": "Country",
            "description": "Two Character Country Code",
            "type": "string",
            "example": "US",
            "x-examples": [
              "US"
            ]
          },
          "market_code": {
            "title": "Market Code",
            "description": "Market ID",
            "type": "string",
            "nullable": true,
            "example": "NEW_YORK_NY",
            "x-examples": [
              "NEW_YORK_NY"
            ]
          },
          "id": {
            "title": "Id",
            "description": "Location ID",
            "type": "string",
            "example": "1bcd054ca1bc48a286be06556cabd171",
            "x-examples": [
              "1bcd054ca1bc48a286be06556cabd171"
            ]
          },
          "property_type": {
            "title": "Property Type",
            "description": "Property type",
            "type": "string",
            "nullable": true,
            "example": "APARTMENT",
            "x-examples": [
              "APARTMENT",
              "SINGLE_FAMILY_HOME"
            ]
          },
          "timezone": {
            "title": "Timezone",
            "description": "Timezone",
            "type": "string",
            "nullable": true,
            "example": "America/New_York",
            "x-examples": [
              "America/New_York"
            ]
          },
          "area": {
            "title": "Area",
            "description": "Area in square feet",
            "type": "integer",
            "nullable": true,
            "example": 1000,
            "x-examples": [
              1000
            ]
          }
        },
        "type": "object",
        "required": [
          "line_1",
          "line_2",
          "city",
          "state",
          "postal_code",
          "country",
          "market_code",
          "id",
          "property_type",
          "timezone",
          "area"
        ],
        "nullable": true,
        "example": {
          "area": 1000,
          "city": "New York City",
          "country": "US",
          "id": "53526308aef0431db8c8583191fa6366",
          "line_1": "123 Main St",
          "line_2": "Apt 1",
          "market_code": "NEW_YORK_NY",
          "postal_code": "10001",
          "property_type": "SINGLE_FAMILY_HOME",
          "state": "NY",
          "timezone": "America/New_York"
        },
        "x-examples": [
          {
            "area": 1000,
            "city": "New York City",
            "country": "US",
            "id": "53526308aef0431db8c8583191fa6366",
            "line_1": "123 Main St",
            "line_2": "Apt 1",
            "market_code": "NEW_YORK_NY",
            "postal_code": "10001",
            "property_type": "SINGLE_FAMILY_HOME",
            "state": "NY",
            "timezone": "America/New_York"
          }
        ]
      },
      "MovingIntentNullable": {
        "title": "MovingIntent",
        "description": "The estimated amount of belongings to move.",
        "type": "string",
        "enum": [
          "EVERYTHING",
          "MOST",
          "HALF",
          "FEW"
        ],
        "default": "EVERYTHING",
        "nullable": true,
        "example": "EVERYTHING",
        "x-examples": [
          "EVERYTHING",
          "HALF"
        ]
      },
      "QuoteServiceGroupsCreateRequest": {
        "title": "Body",
        "description": "Request body for creating a service group",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateQuoteServiceGroupRequest"
          }
        ]
      },
      "QuoteServiceGroupsChangeLocationsRequest": {
        "title": "Location Ids",
        "description": "List of location IDs to replace the existing locations on the service group",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "LeadsListResponse": {
        "title": "Response List Leads Leads Get",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LeadResponse"
        }
      },
      "QuoteServiceGroupCreateFlexibleResponse": {
        "title": "Response Create Flexible Service Groups Quotes  Quote Id  Service Groups  Service Group Id  Flexible Post",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FlexibleQuoteResponse"
        }
      }
    },
    "securitySchemes": {
      "OAuth2ImplicitBearer": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "scopes": {
            },
            "authorizationUrl": "/authorize"
          }
        }
      }
    }
  }
}